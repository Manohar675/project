import tkinter as tk
from datetime import datetime
import time

class StopwatchClock:
    def _init_(self, root):  # Fixed constructor name
        self.root = root
        self.root.title("Stopwatch and Clock")

        self.clock_label = tk.Label(root, font=('Arial', 24), fg='blue')
        self.clock_label.pack()

        self.stopwatch_label = tk.Label(root, text="00:00:00", font=('Arial', 30), fg='green')
        self.stopwatch_label.pack(pady=10)

        self.start_button = tk.Button(root, text='Start', command=self.start)
        self.stop_button = tk.Button(root, text='Stop', command=self.stop)
        self.reset_button = tk.Button(root, text='Reset', command=self.reset)

        self.start_button.pack(side='left', padx=10)
        self.stop_button.pack(side='left', padx=10)
        self.reset_button.pack(side='left', padx=10)

        self.running = False
        self.counter = 0

        self.update_clock()

    def update_clock(self):
        now = datetime.now().strftime('%H:%M:%S')
        self.clock_label.config(text="Current Time: " + now)
        self.root.after(1000, self.update_clock)

    def update_stopwatch(self):
        if self.running:
            self.counter += 1
            time_str = time.strftime('%H:%M:%S', time.gmtime(self.counter))
            self.stopwatch_label.config(text=time_str)
            self.root.after(1000, self.update_stopwatch)

    def start(self):
        if not self.running:
            self.running = True
            self.update_stopwatch()

    def stop(self):
        self.running = False

    def reset(self):
        self.running = False
        self.counter = 0
        self.stopwatch_label.config(text="00:00:00")

root = tk.Tk()
app = StopwatchClock(root)
root.mainloop()